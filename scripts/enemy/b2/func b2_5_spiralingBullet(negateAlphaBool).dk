let alphaPowLow = 2.0;
let alphaPowHigh = 3.0;
let alphaInnerCoefficient = 1.0 / 15.0;
let alphaMax = 30.0;
let tick = diff(4, 4, 3, 2);

let alphaPow = random(alphaPowLow, alphaPowHigh);
func calculateAlpha(t){
    return pow(t * alphaInnerCoefficient, alphaPow);
}

func spawnBullet(velocity){
    spawn("sharpClear", entityPosition(), velocity, "b2_5_bullet3");
}

let alpha = 0.0;
let t = 0;
let ticker = tick;
while(alpha < alphaMax){
    if(negateAlphaBool){
        setAngle(entityAngle() - alpha);
    }
    else{
        setAngle(entityAngle() + alpha);
    }
    t = t + 1;
    alpha = calculateAlpha(t);
    if(ticker <= 1){
        if(negateAlphaBool){
            spawnBullet(makePolar(0.0, entityAngle() - 90.0));
        }
        else{
            spawnBullet(makePolar(0.0, entityAngle() + 90.0));
        }
        ticker = tick;
    }
    else{
        ticker = ticker - 1;
    }
    stall();
}
die();