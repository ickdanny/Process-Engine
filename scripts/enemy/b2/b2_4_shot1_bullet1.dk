let tick = diff(5, 4, 3, 2);
let initAngle = entityAngle();
let angleRand = 20.5;
let angleRandomChance = 0.2;
let spawnOffshootChance = 0.2;
let offshootAngleRandLow = 25.0;
let offshootAngleRandHigh = 55.0;
let offshootSpeed = 2.3 + 0.4 * getDifficulty();
let lowerBound = gameHeight + getY(gameOffset) + 3.0;

func spawnBullet(velocity){
    spawn("sharpYellow", entityPosition(), velocity, "b2_4_shot1_bullet2");
}

func spawnOffshoot(velocity){
    spawn("sharpClear", entityPosition(), velocity, "b2_4_shot1_bullet3");
}

func randomizeAngle(){
    setAngle(initAngle + random(-angleRand, angleRand));
}

let t = 0;
while(entityY() < lowerBound){
    if(t == 0){
        spawnBullet(makePolar(0.0, random(0.0, 360.0)));
        t = tick - 1;
    }
    else{
        t = t - 1;
    }
    if(chance(angleRandomChance)){
        randomizeAngle();
    }
    if(chance(spawnOffshootChance)){
        let baseAngle = entityAngle();
        let offshootAngleRand = random(offshootAngleRandLow, offshootAngleRandHigh);
        let offshootAngle;
        if(chance(0.5)){
            offshootAngle = baseAngle + offshootAngleRand;
        }
        else{
            offshootAngle = baseAngle - offshootAngleRand;
        }
        spawnOffshoot(makePolar(offshootSpeed, offshootAngle));
    }
    stall();
}